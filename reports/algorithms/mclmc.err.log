Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/asyncio/base_events.py", line 654, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.11.9/x64/lib/python3.11/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# run the algorithm on a high dimensional gaussian, and show two of the dimensions

sample_key, rng_key = jax.random.split(rng_key)
samples = run_mclmc(
    logdensity_fn=lambda x: -0.5 * jnp.sum(jnp.square(x)),
    num_steps=1000,
    initial_position=jnp.ones((1000,)),
    key=sample_key,
    transform=lambda x: x.position[:2],
)
samples.mean()
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[5], line 4[0m
[1;32m      1[0m [38;5;66;03m# run the algorithm on a high dimensional gaussian, and show two of the dimensions[39;00m
[1;32m      3[0m sample_key, rng_key [38;5;241m=[39m jax[38;5;241m.[39mrandom[38;5;241m.[39msplit(rng_key)
[0;32m----> 4[0m samples [38;5;241m=[39m [43mrun_mclmc[49m[43m([49m
[1;32m      5[0m [43m    [49m[43mlogdensity_fn[49m[38;5;241;43m=[39;49m[38;5;28;43;01mlambda[39;49;00m[43m [49m[43mx[49m[43m:[49m[43m [49m[38;5;241;43m-[39;49m[38;5;241;43m0.5[39;49m[43m [49m[38;5;241;43m*[39;49m[43m [49m[43mjnp[49m[38;5;241;43m.[39;49m[43msum[49m[43m([49m[43mjnp[49m[38;5;241;43m.[39;49m[43msquare[49m[43m([49m[43mx[49m[43m)[49m[43m)[49m[43m,[49m
[1;32m      6[0m [43m    [49m[43mnum_steps[49m[38;5;241;43m=[39;49m[38;5;241;43m1000[39;49m[43m,[49m
[1;32m      7[0m [43m    [49m[43minitial_position[49m[38;5;241;43m=[39;49m[43mjnp[49m[38;5;241;43m.[39;49m[43mones[49m[43m([49m[43m([49m[38;5;241;43m1000[39;49m[43m,[49m[43m)[49m[43m)[49m[43m,[49m
[1;32m      8[0m [43m    [49m[43mkey[49m[38;5;241;43m=[39;49m[43msample_key[49m[43m,[49m
[1;32m      9[0m [43m    [49m[43mtransform[49m[38;5;241;43m=[39;49m[38;5;28;43;01mlambda[39;49;00m[43m [49m[43mx[49m[43m:[49m[43m [49m[43mx[49m[38;5;241;43m.[39;49m[43mposition[49m[43m[[49m[43m:[49m[38;5;241;43m2[39;49m[43m][49m[43m,[49m
[1;32m     10[0m [43m)[49m
[1;32m     11[0m samples[38;5;241m.[39mmean()

Cell [0;32mIn[4], line 20[0m, in [0;36mrun_mclmc[0;34m(logdensity_fn, num_steps, initial_position, key, transform)[0m
[1;32m     10[0m kernel [38;5;241m=[39m [38;5;28;01mlambda[39;00m sqrt_diag_cov : blackjax[38;5;241m.[39mmcmc[38;5;241m.[39mmclmc[38;5;241m.[39mbuild_kernel(
[1;32m     11[0m     logdensity_fn[38;5;241m=[39mlogdensity_fn,
[1;32m     12[0m     integrator[38;5;241m=[39mblackjax[38;5;241m.[39mmcmc[38;5;241m.[39mintegrators[38;5;241m.[39misokinetic_mclachlan,
[1;32m     13[0m     sqrt_diag_cov[38;5;241m=[39msqrt_diag_cov,
[1;32m     14[0m )
[1;32m     16[0m [38;5;66;03m# find values for L and step_size[39;00m
[1;32m     17[0m (
[1;32m     18[0m     blackjax_state_after_tuning,
[1;32m     19[0m     blackjax_mclmc_sampler_params,
[0;32m---> 20[0m ) [38;5;241m=[39m [43mblackjax[49m[38;5;241;43m.[39;49m[43mmclmc_find_L_and_step_size[49m[43m([49m
[1;32m     21[0m [43m    [49m[43mmclmc_kernel[49m[38;5;241;43m=[39;49m[43mkernel[49m[43m,[49m
[1;32m     22[0m [43m    [49m[43mnum_steps[49m[38;5;241;43m=[39;49m[43mnum_steps[49m[43m,[49m
[1;32m     23[0m [43m    [49m[43mstate[49m[38;5;241;43m=[39;49m[43minitial_state[49m[43m,[49m
[1;32m     24[0m [43m    [49m[43mrng_key[49m[38;5;241;43m=[39;49m[43mtune_key[49m[43m,[49m
[1;32m     25[0m [43m    [49m[43mdiagonal_preconditioning[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[1;32m     26[0m [43m[49m[43m)[49m
[1;32m     28[0m [38;5;66;03m# use the quick wrapper to build a new kernel with the tuned parameters[39;00m
[1;32m     29[0m sampling_alg [38;5;241m=[39m blackjax[38;5;241m.[39mmclmc(
[1;32m     30[0m     logdensity_fn,
[1;32m     31[0m     L[38;5;241m=[39mblackjax_mclmc_sampler_params[38;5;241m.[39mL,
[1;32m     32[0m     step_size[38;5;241m=[39mblackjax_mclmc_sampler_params[38;5;241m.[39mstep_size,
[1;32m     33[0m )

[0;31mTypeError[0m: mclmc_find_L_and_step_size() got an unexpected keyword argument 'diagonal_preconditioning'

